library(tensorflow)
library(keras)
library(cleverhans)
library(png)

model <- res=c("","")
f=list.files("./grass")
for (i in f){
test_image <- image_load(paste("./grass/",i,sep=""),
                                  target_size = target_size)
x <- image_to_array(test_image)
x <- array_reshape(x, c(1, dim(x)))
x <- x/255
pred <- model %>% predict(x)
if(pred[1,2]<0.50){
 print(i)
}
}

res=c("","")
f=list.files("C:\Users\Lenovo\Desktop\Purdue\ie332\a2p2\data-for-332\dandelions\")
for (i in f){
test_image <- image_load(paste("C:\Users\Lenovo\Desktop\Purdue\ie332\a2p2\data-for-332\dandelions\",i,sep=""),
                                  target_size = target_size)
x <- image_to_array(test_image)
x <- array_reshape(x, c(1, dim(x)))
x <- x/255
pred <- model %>% predict(x)
if(pred[1,1]<0.50){
 print(i)
}
}
print(res)

generate_adversarial_example <- function(image, pb_ratio, model) {
  # Input image normalization
  image <- image / 255
  
  # Pixel budget calculation
  pixel_budget <- ceiling(prod(dim(image)) * pb_ratio)
  
  # Initialize the Carlini-Wagner attack
  attack <- CarliniWagnerL2(sess, model, nb_classes = 2, batch_size = 1,
                             confidence = 0, targeted = FALSE, learning_rate = 0.01,
                             binary_search_steps = 9, max_iterations = 1000,
                             abort_early = TRUE, initial_const = 0.01,
                             clip_min = 0, clip_max = 1,
                             max_perturbations = pixel_budget)
  
  # Generate the adversarial example
  adversarial_image <- attack$attack(image)
  
  return(adversarial_image)
}

# generate adverserial image

# Load an image from your dataset
image <- C:\Users\Lenovo\Desktop\Purdue\ie332\a2p2\data-for-332\dandelions\636597665741397587-dandelion-1097518082.jpg

# Pixel Budget Radio (1% = 0.01)
pb_ratio <- 0.01  

# Generate the adversarial example
adversarial_image <- generate_adversarial_example(image, pb_ratio, model)
